/* 클래스와 객체(인스턴스)의 차이점
 * 클래스 - 코드로 만들어진 붕어빵틀 
 * 객체 - 메모리에 적재된 붕어빵
 * */

/* 객체지향 프로그래밍의 3가지 특성
 * 캡슐화 - 속성(데이터) 과 메소드(행위) 를 하나로 묶는것. 클래스를 통해서 (정보은닉 : private 접근)
 * 상속성 - 이미 정의된 상위 클래스의 모든 속성과 메소드를 하위 클래스가 사용할 수 있도록 함. (코드 재사용)
 * 다형성 - 객체가 연산수행 시 동일 메소드가 상속을 전제로 하는 각각의 객체가 가지고 있는 특성을 나타내는 방법 (오버라이딩)
 * 			//오버로드 : 동일 클래스 내 같은 메소드인데 파라미터가 틀릴 때
 * */

// 구구단! **
package Last_Review;

public class Test1 {

	public static void main(String[] args) {
		for (int i=1;i<10;++i) {
			for (int j=2;j<10;++j) {
				System.out.println(j+"*"+i+"="+j*i);
			}
		}
		
	}
}


